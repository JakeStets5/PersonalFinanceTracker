<UserControl x:Class="PersonalFinanceTracker.Views.UploadTransactionView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PersonalFinanceTracker.Views"
             xmlns:uiscripts="clr-namespace:PersonalFinanceTracker.UIScripts"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
             mc:Ignorable="d" 
             Background="#597a7f"
             d:DesignHeight="450" d:DesignWidth="800" MinHeight="500">
    
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <uiscripts:InvertedBoolToVisibilityConverter x:Key="InvertedBoolToVisibilityConverter"/>

        <!-- TextBox Style -->
        <Style TargetType="TextBox">
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="BorderBrush" Value="#597a7f" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="Background" Value="#C6B9CD" />
            <Setter Property="Padding" Value="5" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        CornerRadius="4">
                            <!-- Adjust this value for rounded corners -->
                            <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <!-- Hover Trigger -->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Calendar Day/Hover Style -->
        <Style x:Key="CustomCalendarDayButtonStyle" TargetType="{x:Type CalendarDayButton}">
            <Setter Property="Width" Value="20"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CalendarDayButton}">
                        <Grid>
                            <Ellipse x:Name="HighlightBackground"
                             Fill="Transparent"
                             Width="20"
                             Height="20"/>
                            <ContentPresenter x:Name="Content"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      Content="{TemplateBinding Content}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!-- Hover State -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="HighlightBackground" Property="Fill" Value="#1c2b2e"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <!-- Selected State -->
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="HighlightBackground" Property="Fill" Value="White"/>
                                <!-- Default light blue -->
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>
                            <!-- Today State -->
                            <Trigger Property="IsToday" Value="True">
                                <Setter Property="FontWeight" Value="Bold"/>
                            </Trigger>
                            <!-- Disabled State -->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="Gray"/>
                            </Trigger>
                            <!-- Out-of-Month State -->
                            <Trigger Property="IsBlackedOut" Value="True">
                                <Setter Property="Foreground" Value="LightGray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Calendar Style -->
        <Style x:Key="styleCalendar" TargetType="{x:Type Calendar}">
            <Setter Property="CalendarDayButtonStyle" Value="{StaticResource CustomCalendarDayButtonStyle}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Calendar}">
                        <Viewbox Width="250"
                             Height="225">
                            <CalendarItem x:Name="PART_CalendarItem"
                                      Background="#C6B9CD"
                                      BorderBrush="#1c2b2e"
                                      BorderThickness="10"/>
                        </Viewbox>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Date Picker Style -->
        <Style x:Key="CustomDatePickerStyle" TargetType="DatePicker">
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="BorderBrush" Value="#597a7f" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="Background" Value="#C6B9CD" />
            <Setter Property="Padding" Value="5" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Cursor" Value="Arrow"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DatePicker">
                        <Border x:Name="OuterBorder"
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                CornerRadius="4">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <!-- Date Display -->
                                <DatePickerTextBox x:Name="PART_TextBox"
                                                   Grid.Column="0"
                                                   Foreground="{TemplateBinding Foreground}"
                                                   Background="{TemplateBinding Background}"
                                                   Padding="{TemplateBinding Padding}"
                                                   FocusVisualStyle="{x:Null}"
                                                   IsReadOnly="True">
                                    <DatePickerTextBox.Template>
                                        <ControlTemplate TargetType="DatePickerTextBox">
                                            <Border Background="{TemplateBinding Background}"
                                                    BorderThickness="0"
                                                    CornerRadius="4"
                                                    BorderBrush="Transparent">
                                                <ScrollViewer x:Name="PART_ContentHost" />
                                            </Border>
                                        </ControlTemplate>
                                    </DatePickerTextBox.Template>
                                </DatePickerTextBox>

                                <!-- Calendar Button -->
                                <Button x:Name="PART_Button"
                                        Width="30"
                                        Height="30"
                                        Grid.Column="1"
                                        Background="Transparent"
                                        BorderThickness="0"
                                        Cursor="Hand">
                                    <Button.Template>
                                        <ControlTemplate TargetType="Button">
                                            <Border x:Name="ButtonBorder" Background="{TemplateBinding Background}" CornerRadius="4">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="ButtonBorder" Property="Background" Value="White"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Button.Template>
                                    <ContentControl Content="📅" FontSize="20"/>
                                </Button>

                                <!-- Popup with Calendar -->
                                <Popup x:Name="PART_Popup"
                                       PlacementTarget="{Binding ElementName=PART_TextBox}"
                                       Placement="Bottom"
                                       IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                       StaysOpen="False">
                                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="0"
                                            CornerRadius="4">
                                        <Calendar x:Name="PART_Calendar"
                                                      Style="{StaticResource styleCalendar}"
                                                      SelectedDate="{Binding SelectedDate, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="OuterBorder" Property="BorderBrush" Value="White"/>
                            </Trigger>
                            <!-- Link Button to Popup -->
                            <Trigger SourceName="PART_Button" Property="IsPressed" Value="True">
                                <Setter Property="IsDropDownOpen" Value="True"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ComboBox Style -->
        <Style TargetType="ComboBox">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="BorderBrush" Value="#597a7f"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Background" Value="#C6B9CD"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <Border Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="4">
                                <DockPanel>
                                    <TextBlock Text="{TemplateBinding Text}" 
                                               VerticalAlignment="Center" 
                                               Padding="{TemplateBinding Padding}" 
                                               Foreground="{TemplateBinding Foreground}" />
                                    <ToggleButton Focusable="False" 
                                                  HorizontalAlignment="Right"
                                                  Width="30"
                                                  Height="30"
                                                  Cursor="Hand"
                                                  BorderThickness="0"
                                                  IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                                  Background="{TemplateBinding Background}">
                                        <ToggleButton.Template>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Border x:Name="ToggleButtonBorder" 
                                                        Background="{TemplateBinding Background}" 
                                                        CornerRadius="4">
                                                    <ContentPresenter HorizontalAlignment="Center" 
                                                                      VerticalAlignment="Center"
                                                                      Content="{TemplateBinding Content}"
                                                                      TextElement.Foreground="Black"
                                                                      TextElement.FontSize="20"/>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="ToggleButtonBorder" Property="Background" Value="White"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </ToggleButton.Template>
                                        ▼ <!-- Simplified content -->
                                    </ToggleButton>
                                </DockPanel>
                            </Border>
                            <Popup IsOpen="{TemplateBinding IsDropDownOpen}"
                                   Placement="Bottom"
                                   Width="{TemplateBinding ActualWidth}"
                                   AllowsTransparency="True">
                                <Border Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="1">
                                    <ScrollViewer>
                                        <StackPanel IsItemsHost="True"/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!-- Hover Trigger -->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- ComboBoxItem Style -->
        <Style TargetType="ComboBoxItem">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="5"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="4"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#1c2b2e"/>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#597a7f"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Label Style -->
        <Style TargetType="Label">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontFamily" Value="Montserrat" />
            <Setter Property="FontSize" Value="14" />
        </Style>

        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontFamily" Value="Montserrat" />
            <Setter Property="FontSize" Value="14" />
        </Style>

        <!-- GroupBox Style -->
        <Style TargetType="GroupBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GroupBox">
                        <Border Background="#2F3E46" BorderBrush="#597a7f" BorderThickness="2" CornerRadius="5">
                            <Grid>
                                <!-- Header Background -->
                                <Border Background="#597a7f" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10, -10, 0, 0" CornerRadius="3">
                                    <TextBlock Text="{TemplateBinding Header}"
                                               Foreground="White"
                                               FontFamily="Montserrat"
                                               FontSize="18"
                                               FontWeight="Bold"
                                               Padding="5,2"
                                               VerticalAlignment="Center"/>
                                </Border>
                                <!-- Content -->
                                <ContentPresenter Margin="10,20,10,10"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Placeholder Text Style -->
        <Style x:Key="PlaceholderTextBlockStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Margin" Value="10,0,0,0"/>
            <Setter Property="IsHitTestVisible" Value="False"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextDecorations" Value="Underline"/>
        </Style>

        <!-- Button Style -->
        <Style x:Key="IEButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Background" Value="#597a7f" />
            <Setter Property="Padding" Value="5,5"/>
            <!-- Padding set here -->
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}"
                                CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Pie Chart Legend Style -->
        <Style TargetType="{x:Type lvc:DefaultLegend}">
            <Setter Property="Foreground" Value="White"/>
        </Style>

    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="3*"/>
        </Grid.ColumnDefinitions>
        <GroupBox Header="Templates" Grid.Column="0" Margin="10">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*" />
                    <RowDefinition Height="1*" />
                </Grid.RowDefinitions>

                <!-- Income Templates Section -->
                <StackPanel Grid.Row="0" Margin="5">
                    <TextBlock Text="Income Templates" FontSize="14" Foreground="White" FontWeight="Bold"/>
                    <ItemsControl ItemsSource="{Binding IncomeTemplates}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Button Content="{Binding TemplateName}" Command="{Binding DataContext.LoadTemplateCommand, RelativeSource={RelativeSource AncestorType=GroupBox}}" Margin="5" Padding="10" Background="#597a7f" Foreground="White" FontFamily="Montserrat" FontSize="14" Cursor="Hand" />
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel>

                <!-- Expense Templates Section -->
                <StackPanel Grid.Row="1" Margin="5">
                    <TextBlock Text="Expense Templates" FontSize="14" Foreground="White" FontWeight="Bold"/>
                    <ItemsControl ItemsSource="{Binding ExpenseTemplates}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Button Content="{Binding TemplateName}" Command="{Binding DataContext.LoadTemplateCommand, RelativeSource={RelativeSource AncestorType=GroupBox}}" Margin="5" Padding="10" Background="#597a7f" Foreground="White" FontFamily="Montserrat" FontSize="14" Cursor="Hand" />
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel>
            </Grid>
        </GroupBox>

        <!-- Income and Expense Fields -->
        <StackPanel Grid.Column="1" Orientation="Vertical" Margin="5">
            <!-- Income Section -->
            <GroupBox Header="Income" Margin="5">
                <StackPanel>
                    <Label Content="Amount" />
                    <Grid>
                        <TextBox x:Name="IncomeAmountField"
                                 Text="{Binding IncomeAmount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 PreviewTextInput="IncomeAmountField_PreviewTextInput"
                                 LostFocus="IncomeAmountField_LostFocus"/>
                        <TextBlock Text="Enter income Amount"
                                   Style="{StaticResource PlaceholderTextBlockStyle}"
                                   Visibility="{Binding Text, ElementName=IncomeAmountField, Converter={StaticResource PlaceholderTextVisibilityConverter}}"/>
                    </Grid>
                        <!-- Income Source -->
                    <Label Content="Source" />
                    <Grid>
                        <ComboBox x:Name="IncomeSourceComboBox"
                                  ItemsSource="{Binding IncomeSourceOptions}"
                                  SelectedItem="{Binding IncomeSource, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  IsEditable="True"/>
                        <TextBlock Text="Enter or select income source"
                                   Style="{StaticResource PlaceholderTextBlockStyle}"
                                   Visibility="{Binding Text, ElementName=IncomeSourceComboBox, Converter={StaticResource PlaceholderTextVisibilityConverter}}"/>
                    </Grid>

                    <!-- Frequency -->
                    <Label Content="Frequency" />
                    <Grid>
                        <ComboBox x:Name="IncomeFrequencyComboBox"
                                  ItemsSource="{Binding IncomeFrequencyOptions}"
                                  SelectedItem="{Binding IncomeFrequency, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  IsEditable="True"/>
                        <TextBlock Text="Enter or select income frequency"
                                   Style="{StaticResource PlaceholderTextBlockStyle}"
                                   Visibility="{Binding Text, ElementName=IncomeFrequencyComboBox, Converter={StaticResource PlaceholderTextVisibilityConverter}}"/>
                    </Grid>

                    <!-- Date -->
                    <Label Content="Date" />
                    <Grid>
                        <DatePicker x:Name="IncomeDatePicker" CalendarStyle="{StaticResource styleCalendar}"
                                    Style="{StaticResource CustomDatePickerStyle}"
                                    SelectedDate="{Binding IncomeDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock Text="Select income date"
                                   Style="{StaticResource PlaceholderTextBlockStyle}"
                                   Visibility="{Binding Text, ElementName=IncomeDatePicker, Converter={StaticResource PlaceholderTextVisibilityConverter}}"/>               
                    </Grid>

                    <!-- Payment Method -->
                    <Label Content="Payment Method" />
                    <Grid>
                        <ComboBox x:Name="IncomePaymentMethodField"
                                  ItemsSource="{Binding IncomePaymentMethodOptions}"
                                  SelectedItem="{Binding IncomePaymentMethod, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                  IsEditable="True"/>
                        <TextBlock Text="Enter method of received payment"
                                   Style="{StaticResource PlaceholderTextBlockStyle}"
                                   Visibility="{Binding Text, ElementName=IncomePaymentMethodField, Converter={StaticResource PlaceholderTextVisibilityConverter}}"/>
                    </Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>
                        <Button Grid.Column="0" Command="{Binding AddIncomeStatementCommand}" Style="{StaticResource IEButtonStyle}" Content="Add Income Statement" Margin="10"/>
                        <Button Grid.Column="1" Command="{Binding SaveIncomeTemplateCommand}" Style="{StaticResource IEButtonStyle}" Content="Save Income Template" Margin="10"/>
                        
                    </Grid>
                    
                </StackPanel>
            </GroupBox>

            <!-- Expense Section -->
            <GroupBox Header="Expense" Margin="5">
                <StackPanel>
                    <!-- Expense fields, bindings, and buttons here -->
                    <Label Content="Amount" />
                    <Grid>
                        <TextBox x:Name="ExpenseAmountField"
                                 Text="{Binding ExpenseAmount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 PreviewTextInput="ExpenseAmountField_PreviewTextInput"
                                 LostFocus="ExpenseAmountField_LostFocus"/>
                        <TextBlock Text="Enter expense Amount"
                                   Style="{StaticResource PlaceholderTextBlockStyle}"
                                   Visibility="{Binding Text, ElementName=ExpenseAmountField, Converter={StaticResource PlaceholderTextVisibilityConverter}}"/>
                    </Grid>

                    <Label Content="Source" />
                    <Grid>
                        <ComboBox x:Name="ExpenseSourceField"
                                  ItemsSource="{Binding ExpenseSourceOptions}"
                                  SelectedItem="{Binding ExpenseSource, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  IsEditable="True"/>
                        <TextBlock Text="Enter expense source"
                                   Style="{StaticResource PlaceholderTextBlockStyle}"
                                   Visibility="{Binding Text, ElementName=ExpenseSourceField, Converter={StaticResource PlaceholderTextVisibilityConverter}}"/>
                    </Grid>

                    <!-- Frequency -->
                    <Label Content="Frequency" />
                    <Grid>
                        <ComboBox x:Name="ExpenseFrequencyField"
                                  ItemsSource="{Binding ExpenseFrequencyOptions}"
                                  SelectedItem="{Binding ExpenseFrequency, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  IsEnabled="True"/>
                        <TextBlock Text="Enter expense frequency"
                                   Style="{StaticResource PlaceholderTextBlockStyle}"
                                   Visibility="{Binding Text, ElementName=ExpenseFrequencyField, Converter={StaticResource PlaceholderTextVisibilityConverter}}"/>
                    </Grid>

                    <!-- Date -->
                    <Label Content="Date" />
                    <Grid>
                        <DatePicker x:Name="ExpenseDateField" CalendarStyle="{StaticResource styleCalendar}"
                                    Style="{StaticResource CustomDatePickerStyle}"
                                    SelectedDate="{Binding ExpenseDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock Text="Enter expense date"
                           Style="{StaticResource PlaceholderTextBlockStyle}"
                           Visibility="{Binding Text, ElementName=ExpenseDateField, Converter={StaticResource PlaceholderTextVisibilityConverter}}"/>
                    </Grid>

                    <!-- Payment Method -->
                    <Label Content="Payment Method" />
                    <Grid>
                        <ComboBox x:Name="ExpensePaymentMethodField"
                                  ItemsSource="{Binding ExpensePaymentMethodOptions}"
                                  SelectedItem="{Binding ExpensePaymentMethod, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  IsEnabled="True"/>
                        <TextBlock Text="Enter method of payment"
                                   Style="{StaticResource PlaceholderTextBlockStyle}"
                                   Visibility="{Binding Text, ElementName=ExpensePaymentMethodField, Converter={StaticResource PlaceholderTextVisibilityConverter}}"/>           
                    </Grid>

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>
                        <Button Grid.Column="0" Command="{Binding AddExpenseStatementCommand}" Style="{StaticResource IEButtonStyle}" Content="Add Expense Statement" Margin="10" Background="#597a7f"/>
                        <Button Grid.Column="1" Command="{Binding SaveExpenseTemplateCommand}" Style="{StaticResource IEButtonStyle}" Content="Save Expense Template" Margin="10" Background="#597a7f"/>

                    </Grid>
                </StackPanel>
            </GroupBox>
        </StackPanel>

        <!-- Breakdown Section -->
        <ScrollViewer VerticalScrollBarVisibility="Auto" Grid.Column="2">
            <GroupBox Header="Breakdown" Margin="10">
                <Grid>
                    <!-- Sign In Message (Shown if user is NOT signed in) -->
                    <StackPanel x:Name="SignInPrompt" Visibility="{Binding IsUserSignedIn, Converter={StaticResource InvertedBoolToVisibilityConverter}}" 
                    HorizontalAlignment="Center" VerticalAlignment="Center">
                        <TextBlock Text="Please sign in to view your financial breakdown." 
                       FontSize="16" FontWeight="Bold" TextAlignment="Center"/>
                        <Button Content="Sign In" Style="{StaticResource IEButtonStyle}" Command="{Binding SignInCommand}" 
                    Padding="10,5" Margin="10" HorizontalAlignment="Center"/>
                    </StackPanel>

                    <!-- Financial Breakdown (Shown if user IS signed in) -->
                    <StackPanel x:Name="BreakdownSection" Visibility="{Binding IsUserSignedIn, Converter={StaticResource BoolToVisibilityConverter}}"
                    HorizontalAlignment="Center" VerticalAlignment="Center">
                        <TextBlock Text="Financial Breakdown" FontSize="20" FontWeight="Bold" TextAlignment="Center"/>

                        <!-- Income Date Range Selection -->
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="10">
                            <Label Content="From:" VerticalAlignment="Center" Margin="5"/>
                            <DatePicker CalendarStyle="{StaticResource styleCalendar}"
                                        Style="{StaticResource CustomDatePickerStyle}" 
                                        SelectedDate="{Binding StartDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Label Content="To:" VerticalAlignment="Center" Margin="5"/>
                            <DatePicker CalendarStyle="{StaticResource styleCalendar}"
                                        Style="{StaticResource CustomDatePickerStyle}" SelectedDate="{Binding EndDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </StackPanel>
                        <!-- Income Pie Chart -->
                        <TextBlock Text="Income Breakdown" FontSize="16" FontWeight="Bold" Margin="0,10,0,5"/>
                        <lvc:PieChart Series="{Binding IncomeSeries}" Width="400" Height="400">
                            <lvc:PieChart.LegendLocation>Bottom</lvc:PieChart.LegendLocation>
                        </lvc:PieChart>

                        <!-- Expense Date Range Selection -->
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="10">
                            <Label Content="From:" VerticalAlignment="Center" Margin="5"/>
                            <DatePicker CalendarStyle="{StaticResource styleCalendar}"
                                        Style="{StaticResource CustomDatePickerStyle}" SelectedDate="{Binding StartDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Label Content="To:" VerticalAlignment="Center" Margin="5"/>
                            <DatePicker CalendarStyle="{StaticResource styleCalendar}"
                                        Style="{StaticResource CustomDatePickerStyle}" SelectedDate="{Binding EndDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </StackPanel>
                        <!-- Expense Pie Chart -->
                        <TextBlock Text="Expense Breakdown" FontSize="16" FontWeight="Bold" Margin="0,10,0,5"/>
                        <lvc:PieChart Series="{Binding ExpenseSeries}" Width="400" Height="400">
                            <lvc:PieChart.LegendLocation>Bottom</lvc:PieChart.LegendLocation>
                        </lvc:PieChart>

                        <!-- Refresh Button -->
                        <Button Content="Refresh" Style="{StaticResource IEButtonStyle}" Command="{Binding RefreshCommand}" Padding="10,5" Margin="10"/>
                    </StackPanel>
                </Grid>

            </GroupBox>
        </ScrollViewer>
    </Grid>
</UserControl>
